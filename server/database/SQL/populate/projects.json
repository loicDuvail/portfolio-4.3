[
    {
        "id": 1,
        "project_name": "SHA256",
        "description": "SHA stands for Secure Hashing Algorithm, and it is a family of cryptographic hash functions developed by the National Security Agency (NSA) in the United States. %nA hash function, in simple terms, is a mathematical algorithm that takes an input (any data, like a file or a password) and produces a fixed-size string of characters, which is the hash value or digest.%nThis digest is statistically unique to the input which generated it, and the input that generated it can't be deduced from the digest (except by brute-forcing).%n%nSHA256 (for 256 bits digest) can then be used for instance as a way to securly verify users passwords without ever having to store them as is.%nSince a same input always generates a same digest, storing only the digest of a user's password and later comparing it with the hash of the password attempt is enough to verify a user's identity (random salt can be added for extra security).",
        "description_fr": "SHA signifie Secure Hashing Algorithm. Il s'agit d'une famille de fonctions de hachage cryptographique développées par la National Security Agency (NSA) aux États-Unis.%nUne fonction de hachage, en termes simples, est un algorithme mathématique qui prend une entrée (n'importe quelle donnée, comme un fichier ou un mot de passe) et produit une chaîne de caractères de taille fixe, appelée 'hash' ou 'digest'.%nCe hash est statistiquement unique à l'entrée qui l'a généré, et l'entrée qui l'a généré ne peut pas être déduite du hash (sauf par brute-forcing).%n%nSHA256 (car son hash est de 256 bits) peut alors être utilisé par exemple pour vérifier en toute sécurité les mots de passe des utilisateurs sans jamais avoir à les stocker tels quels.%nÉtant donné qu'une même entrée génère toujours le même hash, il suffit de stocker uniquement le hash du mot de passe d'un utilisateur et de le comparer ensuite avec le hash de la tentative de mot de passe pour vérifier l'identité d'un utilisateur (un sel aléatoire peut être ajouté pour plus de sécurité).",
        "what_i_learned": "This project was my first serious project, I wanted to code a working SHA256 function in Javascript only by basing myself on the FIPS secure hash standard paper.%n%nIt gave me a much deeper understanding of password-storing norms and was intersting to code, since it used fundamental logic operations, and required me to see this algorithm at bit-level. ",
        "what_i_learned_fr": "Ma reproduction du SHA256(Secure Hash ALgorithm 256) était mon premier projet sérieux, Je voulais coder une fonction SHA256 en Javascript Vanilla en me basant seulement sur le document 'secure hash standard' des FIPS.%n%nCe projet m'a permis de développer une compréhension bien plus profonde des standards de stockage de mot-de-passe, et était intéressant à coder, car il nescessitait l'utilisation d'opérations logiques fondamentales, ainsi que de voir cet algorithme à l'échelle des bits.",
        "img": "https://i.postimg.cc/FFZVn7Yv/Screenshot-2023-05-09-172541.png",
        "git_link": "https://github.com/loicDuvail/SHA256",
        "live_demo_link": "https://codepen.io/loicduvail/pen/gOeELqY"
    },
    {
        "id": 2,
        "project_name": "Online IDE",
        "description": "This projects mainly focusses on the syntax highlighter, dynamicaly turning input text into html code by following rules passed as arguments to the GENERATE_HIGHLIGHTER function.%nThis function takes as paremeters an array of objects, containing information about how to highlight text, such as word coloring, interval coloring, dynamic variables and function spotting and coloring... and returns a HIGHLIGHTER function.%nThis function can then take some text as argument that is then converted into html code and rendered over input text.",
        "description_fr": "Ce projet se concentre principalement sur l'highlighter de syntaxe, qui transforme dynamiquement un texte en code html en suivant les règles passées en argument à la fonction GENERATE_HIGHLIGHTER afin de mettre en couleur un texte d'entrée en suivant des règles spécifiques.%nCette fonction prend comme paramètres un tableau d'objets, contenant des informations sur la façon de colorer le texte, comme la coloration de mots, d'intervalles, le repérage dynamique et la coloration de variables et de fonctions... et renvoie une fonction HIGHLIGHTER. Cette fonction peut alors prendre un texte comme argument qui est ensuite converti en code html et affichée par dessus le texte d'entrée.",
        "what_i_learned": "This project was realy interesting, since developing a general case highlighter instead of an hardcoded one required a lot of abstraction and problem deconstruction.%nI used this oportunity to use Object Prototypes for some usefull functions and coded a string modifier, allowing me to modify a string without having  to take into account index shifting caused by the string modification.%n%nThe IDE itself was much easier to code, but realy interesting for it made me understand how web browser approched parpt of their consoles.",
        "what_i_learned_fr": "Ce projet était vraiment intéressant, car développer le cas général d'un surligneur au lieu de le 'hard-coder' nécessitait beaucoup d'abstraction et de déconstruction de problèmes. %nJ'ai profité de l'occasion pour utiliser des prototypes d'objets pour certaines fonctions utiles et j'ai codé un modificateur de chaîne de caractères, me permettant de modifier une chaîne sans avoir à prendre en compte le décalage d'index causé par la modification de cette dernière. %n%nL'IDE lui-même était beaucoup plus facile à coder, mais vraiment intéressant car il m'a permis de mieux comprendre comment les navigateurs web abordaient une partie de leurs consoles.",
        "img": "https://i.postimg.cc/jjnW0dtZ/Screenshot-2023-04-24-213259.png",
        "git_link": "https://github.com/loicDuvail/syntax-highlighter",
        "live_demo_link": "https://codepen.io/loicduvail/full/RweKdXN"
    },
    {
        "id": 3,
        "project_name": "Boids",
        "description": "Boids is an artificial life simulation originally developed by Craig Reynolds. %nThe aim of the simulation was to replicate the behavior of flocks of birds.%nEach boid follows a certain set of rules, for instance how close and far they wan't to be from their peirs or how they will align with them, from which a group behavior arises.%n%nMy version of boids is a web based one, and gives to the user some control over the boids behavior and rendering.",
        "description_fr": "Boids (contraction de bird-oid) est une simulation de vie artificielle développée à l'origine par Craig Reynolds. %nL'objectif de la simulation était de reproduire le comportement de nuées d'oiseaux. %nChaque oiseau suit un certain nombre de règles, par exemple la distance à laquelle il veut être de ses congénère ou la façon dont il s'aligne sur eux, ce qui donne lieu à un comportement de groupe. %n%nMa version des boids est basée sur le web, et donne à l'utilisateur un certain contrôle sur le comportement et le rendu des boids.%n",
        "what_i_learned": "This project gave me the oportunity to deepen my understanding of simulations and rendering, since I used the canvas html element to display a real time simulation of a boid flock.%nI approached the problem in a object-oriented fashion, where every boid is an instanciation of a Boid class, which is updated and drawn every frame.",
        "what_i_learned_fr": "Ce projet m'a donné l'occasion d'approfondir ma compréhension des simulations et du rendering, puisque j'ai utilisé l'élément html canvas pour afficher une simulation en temps réel d'une nuée de boids. %nJ'ai abordé le problème avec une approche orientée objet, où chaque boid est une instanciation d'une classe Boid, qui est mise à jour et dessinée à chaque image.",
        "img": "https://i.postimg.cc/fWffg5Hk/Screenshot-2023-05-09-173933.png",
        "git_link": "https://github.com/loicDuvail/Boids",
        "live_demo_link": "https://codepen.io/loicduvail/full/eYjrvVO"
    },
    {
        "id": 4,
        "project_name": "Perlin noise flow field",
        "description": "How could we generate a random 3D terrain from a computer?%nWell, one could think that we could take a plane a assign a random height to every of its composing point, but that would cause the generated terrain to be unfamiliar with what we see in nature, since two adjacent points could be 10 meters of hight appart, and the next 50...%n%nPerlin noise gives a nice solution to this problem.%nIt derives random values the dot product of randomly defined vectors spaced evenly in a plane.%n%nThis project consisted in using a perlin noise generator, to create a vector field, in which I project particules, which will flow following the environent vectors.%nTheir flow is then rendered on the screen with shifting color for a nice aesthetic.",
        "description_fr": "Comment générer un terrain aléatoire en 3D à partir d'un ordinateur ?%nOn pourrait penser à définir un plan 2-dimensionel et assigner une hauteur aléatoire à chaque point de ce dernier, mais cela génererait un volumne non familier avec les reliefs que nous voyons dans la nature, puisque deux points adjacents pourraient être espacés de 10 mètres de hauteur, et 50 avec les suivants... %n%nLe bruit de Perlin apporte une solution intéressante à ce problème. Il dérive des valeurs aléatoires du produit scalaire de vecteurs définis aléatoirement et espacés régulièrement dans un plan. %n%nCe projet a consisté à utiliser un générateur de bruit de perlin, pour créer un champ de vecteurs, dans lequel je projette des particules, qui vont s'écouler en fonctions des vecteurs environants.%nLeur écoulement est ensuite rendu sur l'écran avec des couleurs changeantes pour une belle esthétique.",
        "what_i_learned": "This project was an opportunity for me to work with vector fields generation and usage, as well as on rendering with Object oriented programming.",
        "what_i_learned_fr": "Ce projet m'a permis de travailler avec des champs de vecteurs, dans leurs génération comme leur effet sur des particules, gérées avec des une approche orientée objet.",
        "img": "https://i.postimg.cc/vZJPdT5m/Screenshot-2023-05-09-174250.png",
        "git_link": "https://github.com/loicDuvail/perlin-noise-flow-field",
        "live_demo_link": "https://codepen.io/loicduvail/full/zYWboWE"
    },
    {
        "id": 5,
        "project_name": "Graph maker",
        "description": "I always wondered how calculators where able to render graphs of functions, and gave the possibility to zoom back and fourth, a well as move on the graph both infintely.%nThis is why I wanted to create my own graph maker from scratch.%n%nThe working concept is that at any moment, the users is focussed on a defined part of a plane, constrained between x and y minimum and maximum values.%nTo render the graph of a function on this interval, I then only have to choose a step between each calculation of the result of the function, giving me a set of point that I can then connect one to one to form the graph of a particular function.",
        "description_fr": "Je me suis toujours demandé comment les calculatrices étaient capables de représenter des graphiques de fonctions, et donnaient la possibilité de se déplacer sur le graph, ainsi que de zoomer en arrière et en avant à l'infini.%nC'est pourquoi j'ai voulu créer mon propre grapheur 'from scractch'.%n%nL'idée motrice est qu'à tout moment, l'utilisateur se concentre sur une partie définie d'un plan, contrainte entre des valeurs x et y minimales et maximales.%nPour représenter le graphique d'une fonction sur cet intervalle, il me suffit de choisir un pas entre chaque calcul du résultat de la fonction, ce qui me donne un ensemble de points que je peux ensuite relier un à un pour former le graphique d'une fonction particulière.",
        "what_i_learned": "I learned a lot by working on this project.%nThere was a lot a value mapping involved,for instance to convert numeric calcuations values into pixels values to render graphs.%nI also embeded a solution to write algrebraic formulas in mathemical standards, which also supports repetitive sums and products over a variable (PI and SIGMA notations).%nCounter intuitively, the hardest part in the developement of this project was the dynamic grid, which automatically resizes and changes step when zooming in and out.",
        "what_i_learned_fr": "J'ai beaucoup appris en travaillant sur ce projet.%nIl y avait beaucoup de mapping de valeurs impliqué, par exemple pour convertir des valeurs de calculs numériques en valeurs de pixels pour afficher des graphs de fonctions.%nJ'ai également intégré une solution pour écrire des formules algébriques dans un standard mathématique, qui supporte également les sommes et produits répétitifs sur une variable (notations PI et SIGMA).%nContre toute attente, la partie la plus difficile du développement de ce projet a été la grille dynamique, qui se redimensionne automatiquement et change de pas lors des zooms avant et arrière.",
        "img": "https://i.postimg.cc/gJk39btJ/Screenshot-2023-05-09-174531.png",
        "git_link": "https://github.com/loicDuvail/grapheur",
        "live_demo_link": "https://codepen.io/loicduvail/full/poZyVqd"
    },
    {
        "id": 6,
        "project_name": "React e-shop",
        "description": "This project took me 5 days to make.%n%nIt is a working e-commerce website coded in React.js, which supports item search through categories and name, as well as a cart system, working with cookies when not connected, and with a database in the opposite case.%n%nI coded the backend from scratch using Node.js and express, as well as Stripe to handle payments.",
        "description_fr": "Ce projet m'a pris 5 jours pour le réaliser.%n%nIl s'agit d'un site e-commerce fonctionnel codé en React.js, qui intègre la possibilité de rechercher des articles par catégorie ou par nom, ainsi qu'un système de panier, fonctionnant avec des cookies lorsque l'utilisateur n'est pas connecté, et avec une base de données dans le cas contraire.%n%nJ'ai codé le backend 'from scratch' en utilisant Node.js et express, ainsi que Stripe pour gérer les paiements.",
        "what_i_learned": "This was my first attempt at using React.js, and gave me the basics of it.%nI coded from scratch my session manager, as well as my cart and payment management and my login/account creation system, so it made me more proefficient in designing modular and reusable solutions for the Web.",
        "what_i_learned_fr": "C'était ma première tentative d'utilisation de React.js, et cela m'a permis d'en acquérir les bases.%nJ'ai codé de A à Z mon gestionnaire de session, mon manager de panier et de paiement ainsi que mon système de connexion/création de compte, ce qui m'a permis de gagner en compétences dans la conception de solutions modulaires et réutilisables pour le Web.",
        "img": "https://i.postimg.cc/xjkyQM43/Screenshot-2023-05-15-194701.png",
        "git_link": "https://github.com/loicDuvail/e-shop",
        "live_demo_link": "http://34.163.205.170/"
    }
]